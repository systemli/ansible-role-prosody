---
- name: Ensure selected lua version is present
  ansible.builtin.apt:
    pkg: "{{ item }}"
    cache_valid_time: 600
  loop:
    - "lua{{ prosody_lua_version }}"
    - "liblua{{ prosody_lua_version }}-dev"
  notify:
    - Update lua alternatives
    - Restart prosody

- name: Ensure required packages are present
  ansible.builtin.apt:
    pkg: "{{ prosody_packages }}"
    cache_valid_time: 600

- name: Ensure prosody systemd drop-in dir exists
  ansible.builtin.file:
    path: "/etc/systemd/system/prosody.service.d"
    state: directory
    mode: "0755"

- name: Ensure prosody file descriptor limit is set
  ansible.builtin.template:
    src: "10-fd-limit.conf.j2"
    dest: "/etc/systemd/system/prosody.service.d/10-fd-limit.conf"
    mode: "0444"
  notify: Restart prosody

- name: Get latest registration theme
  ansible.builtin.git:
    repo: "{{ prosody_custom_registration_theme_repo }}"
    dest: "{{ prosody_custom_registration_theme_path }}"
    version: master
  when: prosody_custom_registration_theme

- name: Configure Prosody
  ansible.builtin.template:
    src: prosody.cfg.lua.j2
    dest: /etc/prosody/prosody.cfg.lua
    owner: root
    group: prosody
    mode: "0640"
  notify: Reload prosody config

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

# - name: Create Prosody accounts
#   ansible.builtin.command: prosodyctl register {{ item.name }} {{ prosody_virtual_domain }} {{ item.password }}
#   with_items: prosody_accounts

- name: Get installed prosody modules
  ansible.builtin.command: prosodyctl list
  changed_when: false
  check_mode: false
  register: __prosody_installed_modules

- name: Assemble external module list to install and enable
  ansible.builtin.set_fact:
    __prosody_extra_modules: >-
      {{ __prosody_extra_modules | default([])
      + prosody_external_modules | default([])
      + prosody_muc_modules_extra | default([]) }}
      {% if prosody_motd and not prosody_motd is string %}
      + [ 'motd_sequential']{% endif %}
      {% if prosody_external_services is defined %}
      + ['extdisco'] {% endif %}
      {% if prosody_turncredentials_host is defined
      and prosody_turncredentials_secret is defined %}
      + ['turncredentials']{% endif %}

- name: Ensure prosody modules are present
  ansible.builtin.command: prosodyctl install mod_{{ item }}
  changed_when: false
  loop: "{{ __prosody_extra_modules | flatten(levels=1) }}"
  when:
    - __prosody_installed_modules.stdout_lines is not search(item)
    - __prosody_extra_modules
  notify: Restart prosody

- name: Get outdated prosody modules
  ansible.builtin.command: prosodyctl list --outdated
  changed_when: false
  check_mode: false
  register: __prosody_outdated_modules
  when: prosody_update_external_modules

- name: Ensure prosody modules are not outdated
  ansible.builtin.command: prosodyctl install mod_{{ item }}
  changed_when: false
  loop: "{{ __prosody_extra_modules | flatten(levels=1) }}"
  when:
    - __prosody_outdated_modules.stdout_lines | default() is search(item)
    - __prosody_extra_modules
    - prosody_update_external_modules
    - prosody_update_external_modules_ignore is not search(item)
  notify: Restart prosody

- name: Include Tasks for TLS Certificates
  ansible.builtin.include_tasks: tls.yml
  with_items: "{{ prosody_virtual_hosts }}"
  tags:
    - certs-jabber

- name: Create parameters for Diffieâ€“Hellman (could take a while)
  ansible.builtin.command: "openssl dhparam -out /etc/prosody/certs/dh-{{ prosody_dhparam_length }}.pem {{ prosody_dhparam_length }}"
  args:
    creates: /etc/prosody/certs/dh-{{ prosody_dhparam_length }}.pem
  notify: Restart prosody
  when: not __testing|default()

- name: Push proxy TLS cert to /etc/prosody/certs/
  ansible.builtin.copy:
    content: "{{ prosody_proxy_ssl_cert }}"
    dest: /etc/prosody/certs/proxy.pem
    owner: root
    group: prosody
    mode: 0640
  when: prosody_proxy_ssl_cert is defined
  tags:
    - certs-jabber
  notify: Reload prosody config

- name: Change ownership of generic key file if no custom is used
  ansible.builtin.file:
    path: /etc/prosody/certs/localhost.key
    owner: root
    group: prosody
    mode: 0640
  when: prosody_proxy_ssl_cert is not defined

- name: Push proxy TLS key to /etc/prosody/certs/
  ansible.builtin.copy:
    content: "{{ prosody_proxy_ssl_key }}"
    dest: /etc/prosody/certs/proxy.key
    owner: root
    group: prosody
    mode: 0640
  when: prosody_proxy_ssl_key is defined
  tags:
    - certs-jabber
  notify: Reload prosody config

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Enable prosody service
  ansible.builtin.systemd:
    name: prosody
    enabled: true
